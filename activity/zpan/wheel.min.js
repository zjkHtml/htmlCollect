var wheels = {
    init: function() {
        var self = this;
        self.urlHead = "http://ssp.1rtb.com";
        self.cont = "/award/countInfo";
        self.appkey = self._getQueryString("appkey");
        self.acid = self._getQueryString("activityid");
        self.business = self._getQueryString("business");
        self.i = self._getQueryString("i") || "__IMEI__";
        self.f = self._getQueryString("f") || "__IDFA__";
        self.uid = self._getQueryString("uid");
        self.appos = self._getDeviceInfo();
        self.ua = self._isweixin();
    },
    _getQueryString: function(name) {
        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
        var r = window.location.search.substr(1).match(reg);
        if (r != null) {
            return unescape(r[2])
        }
        return null
    },
    parseQueryString: function() {
        var str = window.location.search;
        var objURL = {};
        str.replace(new RegExp("([^?=&]+)(=([^&]*))?", "g"), function($0, $1, $2, $3) {
            objURL[$1] = $3
        });
        return objURL
    },
    _getDeviceInfo: function() {
        var browser = {
            versions: function() {
                var u = navigator.userAgent,
                    app = navigator.appVersion;
                return {
                    trident: u.indexOf("Trident") > -1,
                    presto: u.indexOf("Presto") > -1,
                    webKit: u.indexOf("AppleWebKit") > -1,
                    gecko: u.indexOf("Gecko") > -1 && u.indexOf("KHTML") == -1,
                    mobile: !!u.match(/AppleWebKit.*Mobile.*/),
                    ios: !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/),
                    android: u.indexOf("Android") > -1 || u.indexOf("Linux") > -1,
                    iPhone: u.indexOf("iPhone") > -1,
                    iPad: u.indexOf("iPad") > -1,
                    Safari: u.indexOf("Safari") > 0,
                    QQ: !!u.match(/(?:MQQBrowser|QQ)/),
                    UC: !!u.match(/(?:UCWEB|UCBrowser)/)
                }
            }(),
            language: (navigator.browserLanguage || navigator.language).toLowerCase()
        };
        if (browser.versions.ios | browser.versions.iPhone | browser.versions.iPad) {
            return 2
        } else {
            if (browser.versions.android) {
                return 1
            } else {
                return 3
            }
        }
    },
    _isweixin: function() {
        var ua = window.navigator.userAgent.toLowerCase();
        if (ua.match(/MicroMessenger/i) == "micromessenger") {
            return 1
        } else {
            return 0
        }
    }
};
$(function() {
    var vm = new Vue({
        el: "html",
        data: {
            isLoading: true,
            acid: wheels._getQueryString("activityid"),
            appos: wheels._getDeviceInfo(),
            appkey: wheels._getQueryString("appkey"),
            business: wheels._getQueryString("business"),
            uid: wheels._getQueryString("uid"),
            ua: wheels._isweixin(),
            i: wheels._getQueryString("i") || "__IMEI__",
            f: wheels._getQueryString("f") || "__IDFA__",
            urlHead: "http://ssp.1rtb.com",
            deny_cids: [],
            ms: {
                pid: wheels.parseQueryString()["pid"] || 1001149,
                type: "api",
                ad_type: 2,
                src: window.encodeURI(document.location.href),
                ref : window.encodeURI(document.referrer),
                is_mobile : 1,
                device_os : (navigator.userAgent.match('iPhone') || navigator.userAgent.match('iPad')) ? 'IOS' : (navigator.userAgent.match('Android') || navigator.userAgent.match('Linux')) ? 'Android' : 'Others',
                device_density : window.devicePixelRatio ? window.devicePixelRatio : '',
                device_ua : window.encodeURI(navigator.userAgent),
                device_orientation : window.innerHeight > window.innerWidth ? 1 : 0,
                device_lan : document.documentElement.lang,
                device_type : navigator.userAgent.match('iPhone') ? 1 : navigator.userAgent.match('iPad') ? 2 : 0,
                callback : 'MS_SSP_define',

            },
            countInterface: "/award/countInfo",
            times: 8,
            startangel: 0,
            endangel: "",
            award: [],
            awardid: "",
            awardtype: "",
            awardangle: "",
            awardcontent: "",
            awardorderid: "",
            awardimg: "",
            rotateTimer: "",
            timer: "",
            activityDesc: "<title></title>参与活动即有机会获得幸运奖~每天抽奖机会6次免费。此活动为概率中奖，奖品数量有限，祝好运！<br>惊喜一：188元红包<br>惊喜二：88元红包<br>惊喜三：8元红包<br>惊喜四：暖心福袋<br>－－－－－－－－－－－－－－－－<br>重要声明：<br>1.奖品将在活动结束后5-10个工作日安排发放,请耐心等待<br>2.优惠券类奖品的使用规则详见每个优惠券的介绍页<br>3.请兑换后仔细阅读使用流程,如有疑问,可直接联系客服QQ：351173566(工作日9:00至18:00)<br>4.通过非法途径获得奖品的,主办方有权不提供奖品",
            otherRemark: "<title></title>中奖概率说明：<br>•188元红包共5个，中奖概率0.008%;&nbsp;<br>•88元红包共50份,中奖概率0.01%;<br>•8元红包共500份,中奖概率0.05%;<br>•暖心福袋共10000份,中奖概率10%;",
            idDelay: false,
            collapse: false,
            myPrizeLink: "",
            isShowFailedPanel: false,
            showSuccessPanel: false,
            isShowRulePanel: false,
            success: false,
            isShowAddTips: "",
            showHand: true,
            isShowAddTipsWifi: "",
            turnplate: {
                colors: ["#fde804", "#6619be"],
                bRotate: false
            },
            activityParams: {},
            btnStatus: "",
        },
        methods: {
            _ajax: function(URL, param, type, async, succallback) {
                var self = this;
                return $.ajax({
                    url: URL,
                    data: param || {},
                    type: type || "POST",
                    async: async || true,
                    success: succallback,
                    error: function(res) {
                        console.log("网络异常，请稍后重试！")
                    }
                })
            },
            _showFailedPanel: function() {
                this.isShowFailedPanel = false;
                this._rotateInit()
            },
            _showRulePanel: function() {
                this.isShowRulePanel = true
            },
            _hideRulePanel: function() {
                this.isShowRulePanel = false
            },
            _showMoreProbability: function() {
                this.collapse = !this.collapse
            },
            _showNoTimesPanel: function() {
                var param = {
                    name: "time",
                    acid: this.acid,
                    appos: this.appos,
                    appkey: this.appkey,
                    business: this.business,
                    uid: this.uid,
                    ua: this.ua,
                    di: this.i,
                    df: this.f
                };
                alert("今日机会已用完")
            },
            _init: function() {
                this._rotateInit();
                this.isLoading = false
            },
            _rotateInit: function() {
                $(".turnplate").stopRotate();
                this.endangel = parseFloat(this.startangel + 0.3);
                if (this.endangel > 300) {
                    this.startangel = 0;
                    this.endangel = parseFloat(this.startangel + 0.3)
                }
                $(".turnplate").rotate({
                    angle: this.startangel,
                    animateTo: this.endangel,
                    duration: 5,
                    callback: function() {
                        this.startangel = this.endangel
                    }.bind(this)
                });
                this.rotateTimer = window.requestAnimationFrame(function() {
                    this._rotateInit()
                }.bind(this))
            },
            _rotate: function() {
                window.cancelAnimationFrame(this.rotateTimer);
                $(".turnplate").rotate({
                    angle: this.startangel,
                    animateTo: parseFloat(this.startangel) + 1080,
                    duration: 3000,
                    callback: function() {
                        this.startangel = this.endangel
                    }
                });
                this.timer = setTimeout(function() {
                    this._rotate()
                }.bind(this), 200)
            },
            _rotateFn: function(item) {
                clearTimeout(this.timer);
                $(".turnplate").rotate({
                    angle: this.startangel,
                    animateTo: parseInt(item) + 720,
                    duration: 3000,
                    callback: function() {
                        console.log("转完了");
                        this._exposureActivityTicket();
                        this.turnplate.bRotate = false
                    }.bind(this)
                })
            },
            _startWheel: function(event) {
                this.showHand = false;
                window.cancelAnimationFrame(this.rotateTimer);
                if (this.times == 0) {
                    this._showNoTimesPanel();
                    return
                }
                this.btnStatus = this.activityParams.buttonchange;
                setTimeout(function() {
                    this.btnStatus = this.activityParams.buttonstart
                }.bind(this), 100);
                if (this.turnplate.bRotate) {
                    return
                }
                this._rotate();
                this._joinActivity();
                this._showAwards()
            },
            getKeys: function(a) {
                if (Object.keys) {
                    return Object.keys(a)
                }
                var b = [];
                for (var c in a) {
                    if (a.hasOwnProperty(c)) {
                        b.push(c)
                    }
                }
                return b
            },
            serialize: function(m, a) {
                var n = this.getKeys(a);
                var i = [];
                var b = [];
                for (var c = 0; c < n.length; c++) {
                    var o = false;
                    for (var p = 0; p < m.length; p++) {
                        if (m[p] == n[c]) {
                            o = true
                        }
                    }
                    if (o == false) {
                        i.push(n[c])
                    }
                }
                for (var c = 0; c < i.length; c++) {
                    b.push(i[c] + "=" + encodeURIComponent(a[i[c]]))
                }
                b = b.join("&");
                return b
            },
            _showAwards: function() {
                var script = document.createElement("script"),
                    e = this.urlHead + "/req_ad";
                this.ms.deny_cids = this.deny_cids.join(",");
                script.src = e + "?" + this.serialize([], this.ms);
                script.type = "text/javascript";
                $("body").append(script);
                var isTime = 0
                var interval = window.setInterval(function(){
                  isTime += 1000
                  if(isTime >= 1000) {
                    window.MS_SSP_define()
                  }
                },1000)
                //把下面的转化函数放入可以获取转化数据的地方执行
                window.MS_TRANSFORM({})
                window.MS_SSP_define = function(res) {
                    clearInterval(interval)
                    var res = res || {};
                    this.link = res.dUrl ? res.dUrl[0] : "";
                    this.deny_cids.push(res.cid);
                    baseJs.setCookie("status" + res.cid, JSON.stringify(this.deny_cids));
                    this.success = true;
                    this.awardangle = 300;
                    this.awardcontent = res.title || "哎呀,没砸中!";
                    this.awardimg = res.srcUrls ? res.srcUrls[0] : "images/nope.png";
                    this.awardgo = res.content || "关闭";
                    this.clickUrl = res.clickUrl || "";
                    this.monitorUrl = res.monitorUrl || "";
                    var awardmsg = res.content || "";
                    var validitytime = "2099-01-01";
                    var data = {
                        id: 5,
                        cardbgId: 0,
                        title: this.awardcontent,
                        ticket: this.awardimg,
                        clickUrl : this.clickUrl,
                        content: awardmsg,
                        btntext: this.awardgo,
                        GP: validitytime,
                        awardlink: this.link,
                        param: {}
                    };
                    new Dialog(data, {
                        ele: ".closetc",
                        callback: function() {
                            this.showHand = true
                        }.bind(this)
                    });
                    this._rotateFn(this.awardangle);
                    this._sendActivityTicket()
                }.bind(this)
            },
            _joinActivity: function() {
                this.turnplate.bRotate = !this.turnplate.bRotate
            },
            _sendActivityTicket: function() {
                if (!this.link) {
                    $(".detail").hide();
                    $(".card-bg").css("background-position", "1000px 1000px");
                    $(".red-bg").hide();
                    $(".card-sunshine").hide()
                }
                $.each(this.monitorUrl, function(inde, url) {
                    var img = new Image();
                    img.src = url
                })
            },
            _exposureActivityTicket: function() {
                
                this._leavingTimes();
                $(".popShowPrize").show();
                this._rotateInit()
            },
            _leavingTimes: function() {
                this.times--
            },
            _stickyTimes: function() {
                this.times = 8
            },
            _moreActivity: function() {
                var URL = this.urlHead + this.countInterface;
                var data = {
                    "activityid": this.acid,
                    "appos": this.appos,
                    "appkey": this.appkey,
                    "business": this.business,
                    "uid": this.uid,
                    "i": this.i,
                    "f": this.f,
                    "ua": this.ua,
                    "modelname": "更多活动点击",
                    "modeltype": 11
                };
                this._ajax(URL, data, "POST", true, function(res) {
                    console.log("更多活动点击成功")
                });
                window.location.href = this.activityParams.floatlink + "?business=" + this.business + "&appkey=" + this.appkey + "&uid=" + this.uid + "&ua=" + this.ua + "&i=" + this.i + "&f=" + this.f + "&activityid=" + this.acid
            },
            _addTips: function() {
                if (this.appkey == "aae233964f7d4f589d6a74f430fba620" && (this.business == "money-64" || this.business == "money-65" || this.business == "money-66" || this.business == "money-67")) {
                    this.isShowAddTips = true
                }
                if (this.appkey == "1d37d224127f4f1a836e221606dea4ff") {
                    this.isShowAddTipsWifi = true
                }
            }
        },
        ready: function() {
            this._init();
            this._stickyTimes();
            this._addTips();
            this.myPrizeLink = this.urlHead + "/common/prizeModel/prize.html?appkey=" + this.appkey + "&activityid=" + this.acid + "&business=" + this.business + "&uid=" + this.uid + "&i=" + this.i + "&f=" + this.f + +"&activityid=" + this.acid + "&ua=" + this.ua
        }
    })
});